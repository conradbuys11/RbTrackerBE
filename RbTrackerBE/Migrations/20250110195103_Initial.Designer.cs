// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RbTrackerBE.DatabaseContext;

#nullable disable

namespace RbTrackerBE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250110195103_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RbTrackerBE.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GameType")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsTie")
                        .HasColumnType("boolean");

                    b.Property<string>("LikelyWinner")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Loser")
                        .HasColumnType("text");

                    b.Property<int>("TeamOneId")
                        .HasColumnType("integer");

                    b.Property<int?>("TeamOneScore")
                        .HasColumnType("integer");

                    b.Property<int>("TeamTwoId")
                        .HasColumnType("integer");

                    b.Property<int?>("TeamTwoScore")
                        .HasColumnType("integer");

                    b.Property<int>("WeekId")
                        .HasColumnType("integer");

                    b.Property<string>("Winner")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TeamOneId");

                    b.HasIndex("TeamTwoId");

                    b.HasIndex("WeekId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("RbTrackerBE.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Conference")
                        .HasColumnType("integer");

                    b.Property<int>("Division")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("RbTrackerBE.Models.TeamInYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("AvRating")
                        .HasColumnType("real");

                    b.Property<float>("DfRating")
                        .HasColumnType("real");

                    b.Property<int>("Losses")
                        .HasColumnType("integer");

                    b.Property<float>("OfRating")
                        .HasColumnType("real");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<int>("Ties")
                        .HasColumnType("integer");

                    b.Property<int>("Wins")
                        .HasColumnType("integer");

                    b.Property<int>("YearId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("YearId");

                    b.ToTable("TeamsInYears");
                });

            modelBuilder.Entity("RbTrackerBE.Models.Week", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("WeekNo")
                        .HasColumnType("integer");

                    b.Property<int>("YearId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("RbTrackerBE.Models.Year", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("YearNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Years");
                });

            modelBuilder.Entity("RbTrackerBE.Models.Game", b =>
                {
                    b.HasOne("RbTrackerBE.Models.TeamInYear", "TeamOne")
                        .WithMany()
                        .HasForeignKey("TeamOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RbTrackerBE.Models.TeamInYear", "TeamTwo")
                        .WithMany()
                        .HasForeignKey("TeamTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RbTrackerBE.Models.Week", "Week")
                        .WithMany()
                        .HasForeignKey("WeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeamOne");

                    b.Navigation("TeamTwo");

                    b.Navigation("Week");
                });

            modelBuilder.Entity("RbTrackerBE.Models.TeamInYear", b =>
                {
                    b.HasOne("RbTrackerBE.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RbTrackerBE.Models.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("RbTrackerBE.Models.Week", b =>
                {
                    b.HasOne("RbTrackerBE.Models.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Year");
                });
#pragma warning restore 612, 618
        }
    }
}
